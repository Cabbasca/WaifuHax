package lol.waifuware.Modules.EXPLOITS;

import lol.waifuware.Events.OnTickEvent;
import lol.waifuware.Modules.AbstractModule;
import lol.waifuware.Modules.CATEGORY;
import lol.waifuware.Modules.Interfaces.Module;
import lol.waifuware.Util.ChatUtil;
import lol.waifuware.Util.InventoryUtil;
import meteordevelopment.orbit.EventHandler;
import net.minecraft.client.MinecraftClient;
import net.minecraft.entity.Entity;
import net.minecraft.entity.decoration.ItemFrameEntity;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.PlayerInteractEntityC2SPacket;
import net.minecraft.text.Text;
import net.minecraft.util.Hand;

@Module(name = "AutoFrameDupe", key = 0, cat = CATEGORY.EXPLOIT)
public class AutoFrameDupe extends AbstractModule
{
    int state = 0;

    ItemFrameEntity[] frames = new ItemFrameEntity[8];

    public AutoFrameDupe()
    {
        super();

        settings.put("MaxFrames", 4);
        settings.put("hit", 1);
        settings.put("autoPlace", true);

        Create();

        desc[0] = "Automatically perform the frame";
        desc[1] = "dupe for you if the server have";
        desc[2] = "the plugin installed.";

        isEnabled = false;
    }

    int tick = 0, current = 0;
    @EventHandler
    public void onTick(OnTickEvent e)
    {
        if(!isEnabled) return;

        if(frames[0] == null)
        {
            getNearbyItemFrames();
        }else if(!frames[0].isAlive())
        {
            getNearbyItemFrames();
        }

        if(tick >= 2)
        {
            if(frames[current] == null) current = 0;
            else {
                if (frames[current].getHeldItemStack().getItem() != Items.AIR) {
                    MinecraftClient.getInstance().player.networkHandler.sendPacket(PlayerInteractEntityC2SPacket.attack(frames[current], false));
                } else {
                    MinecraftClient.getInstance().player.networkHandler.sendPacket(PlayerInteractEntityC2SPacket.interact(frames[current], false, Hand.MAIN_HAND));
                }
                current++;
                tick = 0;
            }
        }

        tick++;
    }

    private void getNearbyItemFrames()
    {
                                        // current setting system is dumb
        if((boolean)settings.get("autoPlace").toString().equals("true"))
        {
            PlayerEntity player = MinecraftClient.getInstance().player;
            if(player.getInventory().getMainHandStack() != Items.ITEM_FRAME.getDefaultStack())
            {
                int slot = InventoryUtil.getItem(Items.ITEM_FRAME.getDefaultStack());
                if (slot < 0) {
                    ChatUtil.SendMessage("There is no item frame in your inventory");
                    return;
                }
            }
        }
        else
        {
            int i = 0;
            for (Entity e : MinecraftClient.getInstance().world.getEntities())
            {
                if(e instanceof ItemFrameEntity && e.distanceTo(MinecraftClient.getInstance().player) <= 4)
                {
                    ItemFrameEntity entity = (ItemFrameEntity) e;

                    if(entity.getHeldItemStack().getItem() == Items.AIR && i <= Integer.parseInt((String) settings.get("MaxFrames")))
                    {
                        frames[i] = entity;
                        i++;
                    }
                }

            }

            ChatUtil.SendMessage(("Found " + i + " item frames"));
        }
    }

    @Override
    public void onDisable()
    {
        frames = new ItemFrameEntity[8];
    }
}
